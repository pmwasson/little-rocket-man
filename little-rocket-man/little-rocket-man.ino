/*
Hello, World! example
June 11, 2015
Copyright (C) 2015 David Martinez
All rights reserved.
This code is the most basic barebones code for writing a program for Arduboy.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
*/

#include <Arduboy2.h>
#include <Sprites.h>
#include <ArduboyTones.h>

Arduboy2 arduboy;
Sprites  sprites;
ArduboyTones sound(arduboy.audio.enabled);

const unsigned char PROGMEM lrm_plus_mask[] =
{
// width, height,
16, 24,
// FRAME 00
0x00, 0x00, 0x00, 0x80, 0xc0, 0xc0, 0xc0, 0xc0, 0xf8, 0xf8, 0xc6, 0xfe, 0xf2, 0xfe, 0xf2, 0xfe, 
0xf2, 0xfe, 0xf2, 0xfe, 0xc6, 0xfe, 0xf8, 0xf8, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x80, 0x00, 0x00, 
0xbf, 0xff, 0x7c, 0xff, 0x01, 0x03, 0x02, 0x03, 0xdd, 0xff, 0x9b, 0xff, 0xdb, 0xff, 0x9b, 0xff, 
0x9b, 0xff, 0xdb, 0xff, 0x9b, 0xff, 0xdd, 0xff, 0x02, 0x03, 0x01, 0x03, 0x7c, 0xff, 0xbf, 0xff, 
0x01, 0x01, 0x01, 0x01, 0x80, 0x80, 0xc0, 0xc0, 0xdf, 0xff, 0xef, 0xff, 0x01, 0x01, 0x00, 0x00, 
0x00, 0x00, 0x01, 0x01, 0xef, 0xff, 0xdf, 0xff, 0xc0, 0xc0, 0x80, 0x80, 0x01, 0x01, 0x01, 0x01, 

// FRAME 01
0x80, 0x80, 0x00, 0xc0, 0xe0, 0xe0, 0x60, 0xe0, 0xfc, 0xfc, 0xe3, 0xff, 0xf9, 0xff, 0xf9, 0xff, 
0xf9, 0xff, 0xf9, 0xff, 0xe3, 0xff, 0xfc, 0xfc, 0x60, 0xe0, 0xe0, 0xe0, 0x00, 0xc0, 0x80, 0x80, 
0xdf, 0xff, 0xbe, 0xff, 0x00, 0x01, 0x01, 0x01, 0xee, 0xff, 0xcd, 0xff, 0xed, 0xff, 0x4d, 0x7f, 
0x4d, 0x7f, 0xed, 0xff, 0xcd, 0xff, 0xee, 0xff, 0x01, 0x01, 0x00, 0x01, 0xbe, 0xff, 0xdf, 0xff, 
0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xe0, 0xe0, 0x6f, 0x7f, 0x77, 0x7f, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x77, 0x7f, 0x6f, 0x7f, 0xe0, 0xe0, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 

// FRAME 02
0x00, 0x80, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdc, 0xfc, 0x5f, 0xff, 0xbf, 0xff, 0xbf, 0xff, 
0xbf, 0xff, 0xbf, 0xff, 0x5f, 0xff, 0xdc, 0xfc, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0xc0, 0x00, 0x80, 
0xff, 0xff, 0xbe, 0xff, 0x01, 0x01, 0x01, 0x01, 0x7f, 0xff, 0x00, 0xff, 0xdf, 0xff, 0xaf, 0xff, 
0xef, 0xff, 0xdf, 0xff, 0x00, 0xff, 0x7f, 0xff, 0x01, 0x01, 0x01, 0x01, 0xbe, 0xff, 0xff, 0xff, 
0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x80, 0xff, 0x3e, 0x7f, 0x2f, 0x7f, 0x1b, 0x3f, 0x1f, 0x3f, 
0x0e, 0x1f, 0x1b, 0x3f, 0x1f, 0x7f, 0x2c, 0x7f, 0xb8, 0xfe, 0xc0, 0xfc, 0x00, 0x00, 0x00, 0x00, 

// FRAME 03
0x00, 0x80, 0xc0, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdc, 0xfc, 0x5f, 0xff, 0xbf, 0xff, 0xbf, 0xff, 
0xbf, 0xff, 0xbf, 0xff, 0x5f, 0xff, 0xdc, 0xfc, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0xc0, 0x00, 0x80, 
0xff, 0xff, 0xbe, 0xff, 0x01, 0x01, 0x01, 0x81, 0x3f, 0xff, 0xc0, 0xff, 0xdf, 0xff, 0xef, 0xff, 
0xef, 0xff, 0xdf, 0xff, 0x80, 0xff, 0x3f, 0xff, 0x01, 0x01, 0x01, 0x01, 0xbe, 0xff, 0xff, 0xff, 
0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xe0, 0xe3, 0x63, 0x7f, 0x6f, 0x7f, 0x1c, 0x3f, 0x07, 0x7f, 
0x3f, 0x7f, 0x11, 0x3f, 0x4f, 0x7f, 0x62, 0x7f, 0xe0, 0xe7, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00,
};


#define PRIME1 613
#define PRIME2 3001
#define MAXMOVX   5
#define MAXMOVY   5
#define MAXPOSY   1000
#define MINPOSX   -1000
#define MAXPOSX   1000

uint16_t background;
int8_t   movx;
int8_t   movy;
int16_t  posx;
int16_t  posy;

// This function runs once in your game.
// use it for anything that needs to be set only once in your game.
void setup() {
  // initiate arduboy instance
  arduboy.begin();

  // here we set the framerate to 15, we do not need to run at
  // default 60 and it saves us battery life
  arduboy.setFrameRate(60);

  background = 0;
  movx = 0;
  movy = 0;
  posx = 0;
  posy = 0;
}


// our main game loop, this runs once every cycle/frame.
// this is where our game logic goes.
void loop() {
  // pause render until it's time for the next frame
  if (!(arduboy.nextFrame()))
    return;

  // first we clear our screen to black
  arduboy.clear();

  // Debug
  arduboy.setCursor(posx > 0 ? 0 : 8*12, 28);
  arduboy.print(posx);
  arduboy.setCursor(56, posy < MAXPOSY/2 ? 0 : 8*7);
  arduboy.print(posy);

  // Star field 1
  for(uint16_t i=0; i < 128*64; i+=PRIME1) {
    uint16_t j = i + background;
    arduboy.drawPixel (j & 0x7f, (j >> 7) & 0x3f, WHITE);
  }

  // Star field 2
  for(uint16_t i=0; i < 256*128; i+=PRIME2) {
    uint16_t j = i + background;
    arduboy.drawPixel ((j>>1) & 0x7f, (j >> 8) & 0x3f, WHITE);
  }

  posy += movy;
  posx += movx;
  
  if (posy < 0) {
    posy = 0;
    movy = 0;
    movx = 0;
  } else if (posy > MAXPOSY) {
    posy = MAXPOSY;
    movy = 0;    
  }

  if (posx < MINPOSX) {
    posx = MINPOSX;
    movx = 0;
  } else if (posx > MAXPOSX) {
    posx = MAXPOSX;
    movx = 0;    
  }


  if (posy < 20) {
    for(uint8_t y=44+posy; y < 64; y++) {
      arduboy.drawFastHLine(0,y,127);
    }
  }
  else if (posy > MAXPOSY-20) {
    for(uint8_t y=0; y < posy-(MAXPOSY-20); y++) {
      arduboy.drawFastHLine(0,y,127);
    }
  }

  if (posx < MINPOSX+56) {
    for(uint8_t x=0; x < MINPOSX-posx+55; x++) {
      arduboy.drawFastVLine(x,0,63);
    }
  }
  else if (posx > MAXPOSX-56) {
    for(uint8_t x=72+MAXPOSX-posx; x < 127; x++) {
      arduboy.drawFastVLine(x,0,63);
    }
  }

  
  // Inputs
  uint8_t frame = 0;
  
  if (arduboy.pressed(RIGHT_BUTTON)) {
    if (posx < MAXPOSX) movx = min(movx+1,MAXMOVX);
    if (posy <= 0) {
      frame = (arduboy.frameCount>>2&1);
      if (!sound.playing()) {
        sound.tone(NOTE_C7,60, NOTE_B7,80);
      }
    }
  }
  else if (arduboy.pressed(LEFT_BUTTON)) {
    if (posx > MINPOSX) movx = max(movx-1,-MAXMOVX);
    if (posy <= 0) {
      frame = (arduboy.frameCount>>2&1);
      if (!sound.playing()) {
        sound.tone(NOTE_C7,60, NOTE_B7,80);
      }
    }
  }
  else if (posy <= 0) {
    movx=0;
  }

  if (arduboy.pressed(B_BUTTON)) {
    if (!sound.playing()) {
      sound.tone(NOTE_C2H,60, NOTE_A2H,30);
    }
    frame = 2+(arduboy.frameCount>>2&1);
    if (posy < 1000) {
      movy = min(movy+1,MAXMOVY);
    }
  }
  else if (posy > 0) {
    movy = max(movy-1,-MAXMOVY);
    frame=1;
  }
  if (arduboy.pressed(A_BUTTON)) {
    movx = 0;
    movy = 0;
    frame = 0;
  }

  sprites.drawPlusMask((128/2)-(16/2),(64/2)-(24/2),lrm_plus_mask,frame);
  
  background += -movx + (movy << 7);
  arduboy.display();
}
